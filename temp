1. / / HOME //

import React from 'react';
import { motion } from 'framer-motion';
import { User } from 'lucide-react';
import { ProgressRing } from '../components/ProgressRing';
import { BottomNav } from '../components/BottomNav';
import { Header } from '../components/Header';

function Home() {
  return (
    <>
    <div className="max-w-md mx-auto bg-gray-50 min-h-screen pb-20">
      <Header />

      {/* Today's Progress */}
      <motion.section 
        initial={{ y: 20, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.5 }}
        className="px-4 py-4"
        aria-labelledby="progress-heading"
      >
        <div className="bg-white rounded-2xl p-4 shadow-sm">
          <div className="flex justify-between items-center mb-4">
            <h2 id="progress-heading" className="font-semibold text-lg">Today's Progress</h2>
            <button className="text-blue-600 text-sm hover:text-blue-700 transition-colors">
              View more
            </button>
          </div>
          
          <div className="flex justify-between items-center">
            <div className="flex items-center gap-4">
              <div className="text-center">
                <ProgressRing progress={20} color="#3b82f6">
                  <span className="text-sm font-medium">1,284</span>
                </ProgressRing>
                <span className="text-xs text-gray-500 mt-1 block">Calories</span>
              </div>
              <div className="text-center">
                <ProgressRing progress={65} color="#10b981">
                  <span className="text-xs font-medium">20%</span>
                </ProgressRing>
                <span className="text-xs text-gray-500 mt-1 block">Protein</span>
              </div>
              <div className="text-center">
                <ProgressRing progress={85} color="#6366f1">
                  <span className="text-xs font-medium">85%</span>
                </ProgressRing>
                <span className="text-xs text-gray-500 mt-1 block">Water</span>
              </div>
            </div>
            
            <div className="flex items-center gap-2">
              <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                <User className="w-5 h-5 text-blue-600" />
              </div>
              <div className="text-sm">
                <p className="text-gray-600">Keep the pace!</p>
                <p className="font-medium">You're doing great.</p>
              </div>
            </div>
          </div>
        </div>
      </motion.section>

      {/* Food Images */}
      <motion.section 
        initial={{ y: 20, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ delay: 0.2, duration: 0.5 }}
        className="px-4 space-y-4"
      >
        <motion.div 
          className="rounded-2xl overflow-hidden shadow-sm"
          whileHover={{ scale: 1.02 }}
          transition={{ type: "spring", stiffness: 300 }}
        >
          <img 
            src="https://images.unsplash.com/photo-1546069901-ba9599a7e63c?w=800&q=80" 
            alt="Healthy breakfast bowl with fruits and grains" 
            className="w-full h-48 object-cover"
          />
        </motion.div>
        <motion.div 
          className="rounded-2xl overflow-hidden shadow-sm"
          whileHover={{ scale: 1.02 }}
          transition={{ type: "spring", stiffness: 300 }}
        >
          <img 
            src="https://images.unsplash.com/photo-1504674900247-0877df9cc836?w=800&q=80" 
            alt="Grilled salmon with vegetables" 
            className="w-full h-48 object-cover"
          />
        </motion.div>
      </motion.section>

      <BottomNav />
    </div>
    </>
  );

}

export default Home;





2. // MILESTONE // 
 import { motion } from 'framer-motion';
import { Trophy, X } from 'lucide-react';
import { MealCard } from '../components/MealCard';
import { BottomNav } from '../components/BottomNav';

export function Milestone() {
  return (
    <div className="min-h-screen bg-gray-50 pb-16">
      {/* Header */}
      <header className="flex justify-between items-center p-4">
        <div className="flex items-center gap-3">
          <img
            src="https://images.unsplash.com/photo-1438761681033-6461ffad8d80?auto=format&fit=crop&q=80&w=100"
            alt="Profile"
            className="w-10 h-10 rounded-full object-cover"
          />
          <span className="font-medium">Sarah</span>
        </div>
        <button className="p-2">
          <svg
            className="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth={2}
              d="M4 6h16M4 12h16M4 18h16"
            />
          </svg>
        </button>
      </header>

      {/* Achievement Banner */}
      <motion.div
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        className="mx-4 mb-6 bg-purple-600 rounded-2xl p-4 pr-2 flex items-center justify-between relative overflow-hidden"
      >
        <div className="flex items-center gap-3">
          <div className="bg-yellow-400 rounded-full p-2">
            <Trophy className="w-6 h-6 text-purple-600" />
          </div>
          <div>
            <h2 className="text-white font-semibold">Wow! You made it</h2>
            <p className="text-purple-200 text-sm">
              You have won 5 days free trial of the daily diet plan. Enjoy!
            </p>
          </div>
        </div>
        <button className="p-1">
          <X className="w-5 h-5 text-white/80" />
        </button>
      </motion.div>

      {/* Meal Cards */}
      <div className="px-4 space-y-4">
        <MealCard
          image="https://images.unsplash.com/photo-1546069901-ba9599a7e63c?auto=format&fit=crop&q=80&w=800"
          title="Grilled Chicken Salad"
          calories={450}
          time="25 mins"
        />
        <MealCard
          image="https://images.unsplash.com/photo-1512058564366-18510be2db19?auto=format&fit=crop&q=80&w=800"
          title="Asian Glazed Salmon"
          calories={520}
          time="30 mins"
        />
        <MealCard
          image="https://images.unsplash.com/photo-1547592180-85f173990554?auto=format&fit=crop&q=80&w=800"
          title="Mediterranean Bowl"
          calories={380}
          time="20 mins"
        />
      </div>

      {/* Bottom Navigation */}
      <BottomNav />
    </div>
  );
}


3. // ONBOARDING //

import React, { useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';
import { ChevronRight } from 'lucide-react';

function Onboarding() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [direction, setDirection] = useState(0);

  const slideVariants = {
    enter: (direction: number) => ({
      x: direction > 0 ? 1000 : -1000,
      opacity: 0
    }),
    center: {
      zIndex: 1,
      x: 0,
      opacity: 1
    },
    exit: (direction: number) => ({
      zIndex: 0,
      x: direction < 0 ? 1000 : -1000,
      opacity: 0
    })
  };

  const swipeConfidenceThreshold = 10000;
  const swipePower = (offset: number, velocity: number) => {
    return Math.abs(offset) * velocity;
  };

  const slides = [
    {
      image: "https://images.unsplash.com/photo-1546069901-ba9599a7e63c?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
      title: "Enjoy your lunch time",
      description: "Just relax and not overthink what to eat. This is in our side with our personalized meal plans just prepared and adapted to your needs."
    },
    {
      image: "https://images.unsplash.com/photo-1547592180-85f173990554?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
      title: "Healthy & Delicious",
      description: "Discover meals that are both nutritious and delicious, carefully crafted to meet your dietary preferences."
    },
    {
      image: "https://images.unsplash.com/photo-1512621776951-a57141f2eefd?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
      title: "Fresh Ingredients",
      description: "Every meal plan features fresh, seasonal ingredients to ensure you get the best flavors and nutrition."
    },
    {
      image: "https://images.unsplash.com/photo-1493770348161-369560ae357d?ixlib=rb-1.2.1&auto=format&fit=crop&w=800&q=80",
      title: "Variety of Choices",
      description: "From quick lunches to elaborate dinners, find the perfect meal plan that fits your lifestyle."
    }
  ];

  const paginate = (newDirection: number) => {
    setDirection(newDirection);
    setCurrentSlide((prev) => (prev + newDirection + slides.length) % slides.length);
  };

  useEffect(() => {
    const timer = setInterval(() => {
      paginate(1);
    }, 3000);

    return () => clearInterval(timer);
  }, [slides.length]);

  return (
    <div className="min-h-screen bg-white flex items-center justify-center p-4 sm:p-6">
      <div className="w-full max-w-[320px] sm:max-w-md mx-auto">
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="relative"
        >
          {/* Image Slider */}
          <div className="relative rounded-3xl overflow-hidden mb-8 aspect-[4/3]">
            <AnimatePresence initial={false} custom={direction}>
              <motion.div
                key={currentSlide}
                custom={direction}
                variants={slideVariants}
                initial="enter"
                animate="center"
                exit="exit"
                transition={{
                  x: { type: "spring", stiffness: 300, damping: 30 },
                  opacity: { duration: 0.2 }
                }}
                drag="x"
                dragConstraints={{ left: 0, right: 0 }}
                dragElastic={1}
                onDragEnd={(e, { offset, velocity }) => {
                  const swipe = swipePower(offset.x, velocity.x);

                  if (swipe < -swipeConfidenceThreshold) {
                    paginate(1);
                  } else if (swipe > swipeConfidenceThreshold) {
                    paginate(-1);
                  }
                }}
                className="absolute w-full h-full"
              >
                <img
                  src={slides[currentSlide].image}
                  alt={slides[currentSlide].title}
                  className="w-full h-full object-cover"
                />
              </motion.div>
            </AnimatePresence>
          </div>

          {/* Content */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.3, duration: 0.6 }}
            className="text-center px-4 sm:px-6"
          >
            <AnimatePresence mode="wait">
              <motion.h1
                key={`title-${currentSlide}`}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                className="text-xl sm:text-2xl font-semibold mb-3 sm:mb-4 text-gray-900"
              >
                {slides[currentSlide].title}
              </motion.h1>
              <motion.p
                key={`desc-${currentSlide}`}
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                exit={{ opacity: 0, y: -20 }}
                className="text-sm sm:text-base text-gray-600 mb-6 sm:mb-8 leading-relaxed"
              >
                {slides[currentSlide].description}
              </motion.p>
            </AnimatePresence>
          </motion.div>

          {/* Navigation Dots */}
          <div className="flex justify-center items-center space-x-2 mb-6 sm:mb-8">
            {slides.map((_, index) => (
              <motion.div
                key={index}
                onClick={() => {
                  const direction = index > currentSlide ? 1 : -1;
                  setDirection(direction);
                  setCurrentSlide(index);
                }}
                className={`h-1.5 sm:h-2 transition-all duration-300 cursor-pointer ${
                  index === currentSlide 
                    ? 'w-6 bg-purple-600' 
                    : 'w-1.5 sm:w-2 bg-gray-300'
                } rounded-full`}
                whileHover={{ scale: 1.2 }}
                whileTap={{ scale: 0.9 }}
              />
            ))}
          </div>

          {/* Next Button */}
          <motion.button
            whileHover={{ scale: 1.02 }}
            whileTap={{ scale: 0.98 }}
            className="w-full bg-purple-600 text-white py-3 sm:py-4 rounded-2xl font-medium flex items-center justify-center space-x-2 text-sm sm:text-base"
            onClick={() => paginate(1)}
          >
            <span>Next</span>
            <ChevronRight size={18} />
          </motion.button>
        </motion.div>
      </div>
    </div>
  );
}

export default Onboarding;


4. // AUTH //

import { motion } from 'framer-motion';
import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { SocialButton } from '../components/SocialButton';
import { supabase } from '../lib/supabase';

export function Auth() {
  const navigate = useNavigate();
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    // Check if we have a session
    supabase.auth.getSession().then(({ data: { session } }) => {
      if (session) {
        navigate('/milestone');
      }
    });

    // Listen for auth state changes
    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {
      if (session) {
        navigate('/milestone');
      }
    });

    return () => subscription.unsubscribe();
  }, [navigate]);

  const handleEmailSignUp = async () => {
    try {
      setIsLoading(true);
      setError(null);
      
      const email = prompt('Please enter your email:');
      const password = prompt('Please enter your password:');
      
      if (!email || !password) {
        setError('Email and password are required');
        return;
      }

      const { error: signUpError } = await supabase.auth.signUp({
        email,
        password,
        options: {
          emailRedirectTo: `${window.location.origin}/milestone`
        }
      });

      if (signUpError) throw signUpError;

      alert('Check your email for the confirmation link!');
    } catch (err) {
      setError(err instanceof Error ? err.message : 'An error occurred');
    } finally {
      setIsLoading(false);
    }
  };

  const handleSocialLogin = async (provider: 'google' | 'facebook' | 'apple') => {
    try {
      setIsLoading(true);
      setError(null);

      const { data, error: signInError } = await supabase.auth.signInWithOAuth({
        provider,
        options: {
          redirectTo: `${window.location.origin}/milestone`,
          queryParams: {
            access_type: 'offline',
            prompt: 'consent',
          }
        }
      });

      if (signInError) throw signInError;
      if (!data.url) throw new Error('No OAuth URL returned');

      // Redirect to the OAuth provider
      window.location.href = data.url;
    } catch (err) {
      setError(err instanceof Error ? err.message : 'An error occurred');
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-purple-500 to-purple-700 flex flex-col">
      <div className="relative w-full h-72">
        <motion.img
          initial={{ opacity: 0, scale: 1.1 }}
          animate={{ opacity: 1, scale: 1 }}
          transition={{ duration: 0.6 }}
          src="https://images.unsplash.com/photo-1547592180-85f173990554?auto=format&fit=crop&q=80&w=1200"
          alt="Healthy meal with eggs and vegetables"
          className="w-full h-full object-cover rounded-b-[2.5rem] shadow-lg"
        />
        <div className="absolute inset-0 bg-gradient-to-b from-transparent to-purple-500/90 rounded-b-[2.5rem]" />
        <motion.div 
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ delay: 0.3 }}
          className="absolute bottom-6 left-6 right-6 text-white"
        >
          <h1 className="text-3xl font-bold mb-2">Welcome to MealMaster</h1>
          <p className="text-white/90">Your personal meal planner for healthier living</p>
        </motion.div>
      </div>
      <motion.div 
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
        className="flex-1 flex flex-col justify-end px-6 pb-8 mt-6"
      >
        {error && (
          <div className="bg-red-500/10 border border-red-500 rounded-lg p-3 mb-4">
            <p className="text-red-500 text-sm">{error}</p>
          </div>
        )}
        <div className="w-full max-w-md mx-auto space-y-6">
          <SocialButton 
            provider="email" 
            onClick={handleEmailSignUp}
            disabled={isLoading}
          />
          <div className="relative">
            <div className="absolute inset-0 flex items-center">
              <div className="w-full border-t border-gray-300"></div>
            </div>
            <div className="relative flex justify-center text-sm">
              <span className="px-2 text-white bg-transparent">or use social sign up</span>
            </div>
          </div>
          <div className="space-y-3">
            <SocialButton 
              provider="google" 
              onClick={() => handleSocialLogin('google')}
              disabled={isLoading}
            />
            <SocialButton 
              provider="facebook" 
              onClick={() => handleSocialLogin('facebook')}
              disabled={isLoading}
            />
            <SocialButton 
              provider="apple" 
              onClick={() => handleSocialLogin('apple')}
              disabled={isLoading}
            />
          </div>
          <p className="text-center text-white text-sm">
            Already have an account?{' '}
            <button 
              onClick={() => navigate('/login')} 
              className="font-semibold hover:underline"
            >
              Log In
            </button>
          </p>
        </div>
      </motion.div>
    </div>
  );
}

5. // FEEDBACK //

import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { ArrowLeft } from 'lucide-react';

type FeedbackOption = 'Application bugs' | 'Customer service' | 'Slow loading' | 'Bad navigation' | 'Weak functionality' | 'Other problems';

function Feedback() {
  const [selectedRating, setSelectedRating] = useState<number | null>(null);
  const [selectedOptions, setSelectedOptions] = useState<FeedbackOption[]>([]);
  const [notes, setNotes] = useState('');

  const feedbackOptions: FeedbackOption[] = [
    'Application bugs',
    'Customer service',
    'Slow loading',
    'Bad navigation',
    'Weak functionality',
    'Other problems'
  ];

  const emojis = ['😢', '🙁', '😐', '🙂', '😍'];

  const handleOptionToggle = (option: FeedbackOption) => {
    setSelectedOptions(prev => 
      prev.includes(option) 
        ? prev.filter(item => item !== option)
        : [...prev, option]
    );
  };

  return (
    <div className="min-h-screen bg-white px-4">
      <div className="pt-4 flex items-center justify-between">
        <ArrowLeft className="w-6 h-6" />
        <button className="text-blue-500 text-sm">Skip</button>
      </div>

      <div className="mt-6">
        <h1 className="text-2xl font-semibold">How was your overall experience?</h1>
        <p className="text-gray-500 text-sm mt-1">It will help us to serve you better.</p>

        <div className="flex justify-between mt-6">
          {emojis.map((emoji, index) => (
            <motion.button
              key={index}
              whileTap={{ scale: 0.95 }}
              onClick={() => setSelectedRating(index)}
              className={`text-3xl ${selectedRating === index ? 'transform scale-110' : ''}`}
            >
              {emoji}
            </motion.button>
          ))}
        </div>

        <h2 className="text-lg font-semibold mt-8">What is wrong?</h2>
        <div className="flex flex-wrap gap-2 mt-3">
          {feedbackOptions.map((option) => (
            <motion.button
              key={option}
              whileTap={{ scale: 0.95 }}
              onClick={() => handleOptionToggle(option)}
              className={`px-4 py-2 rounded-full text-sm ${
                selectedOptions.includes(option)
                  ? 'bg-purple-600 text-white'
                  : 'bg-gray-100 text-gray-800'
              }`}
            >
              {option}
            </motion.button>
          ))}
        </div>

        <div className="mt-8">
          <h2 className="text-lg font-semibold">Notes</h2>
          <textarea
            value={notes}
            onChange={(e) => setNotes(e.target.value)}
            placeholder="How can we do better?"
            className="w-full mt-3 p-3 border border-gray-200 rounded-lg h-32 focus:outline-none focus:ring-2 focus:ring-purple-600"
          />
        </div>

        <motion.button
          whileTap={{ scale: 0.95 }}
          className="w-full bg-purple-600 text-white py-4 rounded-lg mt-8 font-medium"
        >
          Submit Feedback
        </motion.button>
      </div>
    </div>
  );
}

export default Feedback;

6. // LIB //
// SUPABASE //

import { createClient } from '@supabase/supabase-js';

const supabaseUrl = 'http://localhost:5173/';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inh6amR1bHFncnl3em5pdGNmZ25uIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ0Nzk2NTcsImV4cCI6MjA2MDA1NTY1N30.ijOOWVKs8tykfBPpW92ttPJzm62MJ0OIeNeLq2qEeI8';

if (!supabaseUrl || !supabaseAnonKey) {
  throw new Error('Missing Supabase credentials');
}

export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  }
});







